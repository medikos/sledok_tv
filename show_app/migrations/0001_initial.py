# Generated by Django 3.1.7 on 2021-03-27 19:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import show_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_tvmaze', models.IntegerField(unique=True)),
                ('url_tvmaze', models.URLField(blank=True)),
                ('name', models.CharField(blank=True, max_length=150)),
                ('image_url_medium', models.URLField(blank=True)),
                ('image_url_original', models.URLField(blank=True)),
                ('country', models.CharField(blank=True, default='', max_length=400)),
                ('birthday', models.DateField(blank=True)),
                ('deathday', models.DateField(blank=True)),
                ('gender', models.CharField(blank=True, default='', max_length=100)),
            ],
            options={
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='Genres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Жанр')),
                ('name_rus', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RusFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_tvmaze', models.IntegerField(unique=True)),
                ('id_tvrage', models.IntegerField(blank=True, null=True)),
                ('id_thetvdb', models.IntegerField(blank=True, null=True)),
                ('id_imdb', models.CharField(blank=True, max_length=150, null=True)),
                ('name', models.CharField(max_length=400, verbose_name='Название шоу')),
                ('url_tvmze', models.URLField(blank=True)),
                ('type_show', models.CharField(blank=True, choices=[('unknown', ''), ('Scripted', 'Сериал'), ('Animation', 'Анимация')], default='unknown', max_length=200)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, choices=[('unknown', ''), ('Running', 'Продолжается'), ('Ended', 'Закончился'), ('To Be Determined', 'Приостановленный'), ('In Development', 'В разработке')], max_length=200, null=True)),
                ('premired', models.DateField(blank=True, default='1945-05-09', null=True)),
                ('officialSite', models.URLField(blank=True, max_length=500, null=True)),
                ('raiting', models.IntegerField(blank=True, null=True)),
                ('raiting_average', models.FloatField(blank=True, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('original_image', models.ImageField(blank=True, null=True, upload_to='original_media/')),
                ('updated', models.IntegerField(blank=True, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('image_medium_url', models.URLField(blank=True, null=True)),
                ('image_original_url', models.URLField(blank=True, null=True)),
                ('original_image1', models.ImageField(blank=True, null=True, upload_to='')),
                ('actors', models.ManyToManyField(blank=True, to='show_app.Actors')),
                ('genres', models.ManyToManyField(blank=True, to='show_app.Genres')),
                ('rus_fields', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='show_app.rusfields')),
            ],
            options={
                'verbose_name': 'TV Show',
                'verbose_name_plural': 'TV Shows',
            },
        ),
        migrations.CreateModel(
            name='Telegram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(blank=True, max_length=200)),
                ('chat_id', models.IntegerField(blank=True)),
                ('code', models.CharField(default=show_app.models.gen_code, max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='WebChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SiteUserModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send', models.BooleanField(default=False)),
                ('time_1', models.BooleanField(default=False)),
                ('time_2', models.BooleanField(default=False)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='show_app.sender')),
                ('shows', models.ManyToManyField(blank=True, to='show_app.Show')),
                ('telegram', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='show_app.telegram')),
                ('trash', models.ManyToManyField(blank=True, related_name='trash', to='show_app.Show')),
                ('user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='show',
            name='web_channel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='show_app.webchannel'),
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_tvmaze', models.IntegerField()),
                ('url_tvmaze', models.URLField(blank=True, max_length=500, null=True)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('season', models.IntegerField(blank=True, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('airdate', models.DateField(blank=True, null=True)),
                ('airtime', models.TimeField(blank=True, null=True)),
                ('url_image_original', models.URLField(blank=True, max_length=500, null=True)),
                ('summary', models.TextField(blank=True, max_length=1000, null=True)),
                ('date_created', models.DateField(auto_now_add=True, null=True)),
                ('show', models.ForeignKey(max_length=500, on_delete=django.db.models.deletion.CASCADE, related_name='Episodes', related_query_name='entry', to='show_app.show')),
            ],
            options={
                'verbose_name': 'Episode',
                'verbose_name_plural': 'Episodes',
                'ordering': ['-airdate'],
            },
        ),
    ]
